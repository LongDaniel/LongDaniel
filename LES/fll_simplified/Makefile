########################################################################
# Makefile for building the 2DECOMP&FFT library
########################################################################

# Normally, do not change anything here. Modify the platform-dependent
# Makefile.inc file instead

include ../Makefile.inc

SRCS = fll_type.f90 fll_out.f90 fll_cat.f90 fll_stich.f90 fll_rm.f90 \
    fll_mv.f90 fll_mk.f90 fll_duplicate.f90 fll_cp.f90 fll_deattach.f90 \
		fll_funct_prt.f90 fll_getnbytes.f90 fll_locate.f90 fll_getndata.f90 \
    fll_match_pattern.f90 fll_mkdir.f90 fll_nnodes.f90 fll_read.f90 \
    fll_read_record.f90 fll_read_ffa.f90 fll_sweep.f90 fll_write.f90 \
    fll_write_ffa.f90 fll_scan_file.f90 fll_read_ucd.f90 fll_rename.f90 \
    fll_mods.f90 

########## Part 1 of automatic dependency generation: begin #############
# Script to generate the dependencies
MAKEDEPEND=$(HOSLES_ROOT)/fort_depend.py

# $(DEP_FILE) is a .dep file generated by fort_depend.py
DEP_FILE = fll.dep
########## Part 1 of automatic dependency generation: end #############


OBJS =	$(SRCS:.f90=.o)
LIB = libfll.a

.PHONY: all
all: $(LIB)  $(DEP_FILE) 
	$(MAKE) install

%.o : %.f90
	$(FC) $(FFLAGS) -c $<

########## Part 2 of automatic dependency generation: begin #############
# Source files to compile
OBJECTS = $(SRCS)        

## Make sure everything depends on the .dep file
#all: $(actual_executable) $(DEP_FILE)

# Make dependencies
.PHONY: depend
depend: $(DEP_FILE)

# The .dep file depends on the source files, so it automatically gets updated
# when you change your source
$(DEP_FILE): $(OBJECTS)
	@echo "Making dependencies!"
	$(MAKEDEPEND) -w -r $(HOSLES_ROOT) -o $(DEP_FILE) -f $(OBJECTS)
    
include $(DEP_FILE)
########## Part 2 of automatic dependency generation: end #############

$(LIB): $(OBJS)
	ar qc $@ $(OBJS)

.PHONY: lib
lib: $(LIB)

.PHONY: install
install: 
	mkdir -p ../lib
	mkdir -p ../include
	cp -u libfll.a ../lib
	cp -u *.mod ../include 

#alloc_shm.o: alloc_shm.c
#	$(CC) $(CFLAGS) -c $<

#FreeIPC_c.o: FreeIPC_c.c
#	$(CC) $(CFLAGS) -c $<

#.PHONY: mkl_mod
#mkl_mod:
#	echo Building Intel MKL mod files...
#	$(IFORT) -c $(MKL_PATH)/include/mkl_dfti.f90

#.PHONY: examples
#examples: lib

#.PHONY: test
#test: examples

.PHONY: clean
clean:
	rm -f *.o *.mod lib*.a

.PHONY: realclean
realclean: clean
	rm -f *~ \#*\#

